{"ast":null,"code":"import _classCallCheck from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js\";\nimport React from 'react';\nimport ReactDropzone from 'react-dropzone';\n\nvar MultiFileUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiFileUpload, _React$Component);\n\n  function MultiFileUpload(props) {\n    var _this;\n\n    _classCallCheck(this, MultiFileUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiFileUpload).call(this, props));\n\n    _this.onDrop = function (files) {\n      _this.setState({\n        files: _this.state.files.concat(files)\n      });\n    };\n\n    _this.state = {\n      files: []\n    };\n    return _this;\n  }\n\n  _createClass(MultiFileUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(ReactDropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Drop your best gator GIFs here!!\"));\n    }\n  }]);\n\n  return MultiFileUpload;\n}(React.Component);\n\nexport default MultiFileUpload;","map":{"version":3,"sources":["/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js"],"names":["React","ReactDropzone","MultiFileUpload","props","onDrop","files","setState","state","concat","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;;AADiB,UAOnBC,MAPmB,GAOV,UAACC,KAAD,EAAW;AAClB,YAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAE,MAAKE,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,CAAwBH,KAAxB;AADK,OAAd;AAGD,KAXkB;;AAEjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAQQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,MAAM,EAAE,KAAKD,MADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF;AASD;;;;EAxB2BJ,KAAK,CAACS,S;;AA2BpC,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport ReactDropzone from 'react-dropzone';\n\nclass MultiFileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n    }\n  }\n\n  onDrop = (files) => {\n    this.setState({\n      files: this.state.files.concat(files),\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactDropzone\n          onDrop={this.onDrop}\n        >\n        Drop your best gator GIFs here!!\n        </ReactDropzone>\n      </div>\n    );\n  }\n}\n\nexport default MultiFileUpload;\n"]},"metadata":{},"sourceType":"module"}