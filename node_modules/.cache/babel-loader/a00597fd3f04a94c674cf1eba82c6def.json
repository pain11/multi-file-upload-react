{"ast":null,"code":"import _classCallCheck from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js\";\nimport React from 'react';\nimport Dropzone from \"react-dropzone\";\nimport classNames from 'classnames';\n\nvar MultiFileUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiFileUpload, _React$Component);\n\n  function MultiFileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MultiFileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MultiFileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiFileUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDropActive = _ref.isDropActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        })), \"Drop your images here...\");\n      });\n    }\n  }]);\n\n  return MultiFileUpload;\n}(React.Component);\n\nexport default MultiFileUpload;","map":{"version":3,"sources":["/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js"],"names":["React","Dropzone","classNames","MultiFileUpload","onDrop","acceptedFiles","rejectedFiles","getRootProps","getInputProps","isDropActive","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,e;;;;;;;;;;;;;;;;;;UACJC,M,GAAS,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACxC;AACD,K;;;;;;;6BAEQ;AACR,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKF,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,gBAAmD;AAAA,YAAhDG,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AACjD,eACE,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,6BADF;AAMD,OATL,CADF;AAcD;;;;EApB2BR,KAAK,CAACU,S;;AAuBpC,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport Dropzone from \"react-dropzone\";\nimport classNames from 'classnames';\n\nclass MultiFileUpload extends React.Component {\n  onDrop = (acceptedFiles, rejectedFiles) => {\n     // Do something with files\n   }\n\n   render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {\n          ({ getRootProps, getInputProps, isDropActive }) => {\n            return (\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                Drop your images here...\n              </div>\n            )\n          }\n        }\n      </Dropzone>\n    );\n  }\n}\n\nexport default MultiFileUpload;\n"]},"metadata":{},"sourceType":"module"}