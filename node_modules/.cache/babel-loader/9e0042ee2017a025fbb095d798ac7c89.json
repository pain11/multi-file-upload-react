{"ast":null,"code":"import _classCallCheck from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rahul/multi-file-upload-react/multi-file-upload/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js\";\nimport React from 'react';\nimport Dropzone from \"react-dropzone\";\n\nvar MultiFileUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiFileUpload, _React$Component);\n\n  function MultiFileUpload(props) {\n    var _this;\n\n    _classCallCheck(this, MultiFileUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiFileUpload).call(this, props));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    _this.state = {\n      files: []\n    };\n    return _this;\n  }\n\n  _createClass(MultiFileUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Drop image here...\") : React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Drop your images here Or click to add image\"));\n      });\n    }\n  }]);\n\n  return MultiFileUpload;\n}(React.Component);\n\nexport default MultiFileUpload;","map":{"version":3,"sources":["/home/rahul/multi-file-upload-react/multi-file-upload/src/MultiFileUpload.js"],"names":["React","Dropzone","MultiFileUpload","props","onDrop","acceptedFiles","rejectedFiles","state","files","getRootProps","getInputProps","isDragActive","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;;AADiB,UAOnBC,MAPmB,GAOV,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACxC;AACD,KATiB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAMS;AACR,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKJ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,gBAAmD;AAAA,YAAhDK,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AACjD,eACE,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAGIC,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDALN,CADF;AAUD,OAbL,CADF;AAkBD;;;;EA/B2BX,KAAK,CAACY,S;;AAkCpC,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport Dropzone from \"react-dropzone\";\n\nclass MultiFileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n    };\n  }\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n     // Do something with files\n   }\n\n   render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {\n          ({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                  isDragActive ?\n                    <h6>Drop image here...</h6> :\n                    <h6>Drop your images here Or click to add image</h6>\n                }\n              </div>\n            )\n          }\n        }\n      </Dropzone>\n    );\n  }\n}\n\nexport default MultiFileUpload;\n"]},"metadata":{},"sourceType":"module"}